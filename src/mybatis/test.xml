<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="test">
	
	<resultMap type="mybatis.EmpVo" id="emp_map">
		<result property="employeeId" column="employee_id"/>
		<result property="firstName" column="first_name"/>
		<result property="phoneNumber" column="phone_number"/>
		<result property="salary" column="salary"/>
	</resultMap>
	<!-- 아래의 부서코드100번의 예시와 같은 경우 EmpVo클래스의 getter와 sql문장과의 차이때문에 null 값이 생긴다. 이를 방지 하기 위해 매핑을 시킨다 -->
		
	<!-- 부서코드가 100번인 직원들의 사번, 이름, 급여, 연락처를 조회 -->
	<select id='dep4' parameterType="Integer" resultMap="emp_map">
		select employee_id, first_name, salary, phone_number from employees where department_id = #{_parameter}
	</select>
		
	<!-- 사번을 사용하여 사원의 이름을 리턴 -->
	<!--  파라메터 값으로 정수값을 넘겨주고 리턴값으로 문자열을 받는다. -->
	<select id="test_emp" parameterType="Integer" resultType="String">
		select first_name from employees where employee_id = #{_parameter}
	
	</select>

	<!-- 부서코드를 입력받아 부서명을 출력 -->
	<select id="test_dep" parameterType="Integer" resultType="String">
		select department_name from departments where department_id = #{_parameter}
	</select>
	
	<!-- 제품 목록을 모두 출력 -->
	<select id="all_product" resultType="product.ProductVo">
		select * from product
	</select>
	
	<insert id="product_insert" parameterType="product.ProductVo">
		insert into product( serial, gubun, nal, pcode, pname, ea, price, amt, mid )
		values (seq_product.nextval, #{gubun}, sysdate, #{pCode}, #{pName}, #{ea},
				#{price}, #{amt}, #{mid}  )
	</insert>

</mapper>